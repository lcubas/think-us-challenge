services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: db_name
      POSTGRES_USER: db_user
      POSTGRES_PASSWORD: pa$$word
      POSTGRES_INITDB_ARGS: "--encoding=UTF8"
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - think-us-challenge-network

  api:
    build:
      context: .
      dockerfile: docker/Dockerfile
    env_file:
      - docker/app.env
    environment:
      NODE_ENV: development
      PORT: 3000
      DB_HOST: postgres
    ports:
      - "3000:3000"
    volumes:
      - ./:/app:delegated
      - /app/node_modules
    depends_on:
      - postgres
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      - think-us-challenge-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  think-us-challenge-network:
    driver: bridge